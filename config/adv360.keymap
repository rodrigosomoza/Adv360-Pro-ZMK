#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp PIPE              &kp AMPERSAND  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp PLUS  &tog 1                                                      &mo 3      &kp EQUAL  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp ASTRK      &kp EXCLAMATION
&kp TAB               &kp Q          &kp W             &kp E           &kp R                 &kp T     &none                                                       &none      &kp Y      &kp U                  &kp I            &kp O              &kp P          &kp DOUBLE_QUOTES
&mt LEFT_CONTROL ESC  &kp A          &kp S             &kp D           &kp F                 &kp G     &kp CAPSLOCK  &kp LCTRL  &kp LALT      &kp LGUI  &kp RCTRL  &none      &kp H      &kp J                  &kp K            &kp L              &kp SEMI       &kp SQT
&kp LSHFT             &kp Z          &kp X             &kp C           &kp V                 &kp B                              &mo 6         &mo 1                           &kp N      &kp M                  &kp COMMA        &kp DOT            &kp UNDER      &kp RSHFT
&mo 2                 &kp GRAVE      &kp MINUS         &kp LEFT        &kp RIGHT                       &kp BSPC      &kp DEL    &mo 5         &mo 4     &kp ENTER  &kp SPACE             &kp UP                 &kp DOWN         &kp SLASH          &kp BACKSLASH  &mo 2
            >;
        };

        keypad {
            bindings = <
&trans  &trans  &trans  &trans    &trans     &trans  &trans                                                   &mo 3      &trans     &trans     &trans     &trans      &kp KP_MULTIPLY  &kp KP_NUM
&trans  &trans  &trans  &trans    &trans     &trans  &none                                                    &none      &trans     &kp KP_N7  &kp KP_N8  &kp KP_N9   &kp KP_MINUS     &trans
&trans  &trans  &trans  &trans    &trans     &trans  &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp KP_N0  &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS      &trans
&trans  &trans  &trans  &trans    &trans     &trans                       &kp HOME      &kp PG_UP                        &trans     &kp KP_N1  &kp KP_N2  &kp KP_N3   &kp KP_ENTER     &kp RSHFT
&mo 2   &trans  &trans  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0             &kp UP     &kp DOWN   &kp KP_DOT  &trans           &mo 2
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        SC {
            bindings = <
&trans  &trans    &trans       &trans         &trans            &trans  &trans                                      &trans  &trans     &trans      &trans     &trans     &trans       &trans
&trans  &trans    &trans       &trans         &trans            &trans  &trans                                      &trans  &trans     &trans      &trans     &trans     &trans       &trans
&trans  &kp HASH  &kp AT_SIGN  &kp LESS_THAN  &kp GREATER_THAN  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans     &kp DOLLAR  &kp QMARK  &kp CARET  &kp PERCENT  &trans
&trans  &trans    &trans       &trans         &trans            &trans                  &trans      &trans                  &kp TILDE  &trans      &trans     &trans     &trans       &trans
&trans  &trans    &trans       &trans         &trans                    &trans  &trans  &trans      &trans  &trans  &trans             &trans      &trans     &trans     &trans       &trans
            >;
        };

        NavEdit {
            bindings = <
&trans  &trans  &trans     &trans             &trans             &trans  &trans                                      &trans  &trans  &trans          &trans          &trans           &trans  &trans
&trans  &trans  &trans     &kp K_UNDO         &kp K_REDO         &trans  &trans                                      &trans  &trans  &kp HOME        &kp UP_ARROW    &kp PAGE_UP      &trans  &trans
&trans  &trans  &kp K_CUT  &kp K_COPY         &kp K_PASTE        &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans  &trans     &kp LC(LA(ENTER))  &kp LC(LA(SPACE))  &trans                  &trans      &trans                  &trans  &kp PAGE_DOWN   &trans          &kp PAGE_DOWN    &trans  &trans
&trans  &trans  &trans     &trans             &trans                     &trans  &trans  &trans      &trans  &trans  &trans          &trans          &trans          &trans           &trans  &trans
            >;
        };

        Media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans          &trans             &trans                &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &kp C_MUTE      &kp C_VOLUME_UP    &kp C_BRIGHTNESS_INC  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp C_PREVIOUS  &kp C_PLAY_PAUSE   &kp C_NEXT            &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans          &kp C_VOLUME_DOWN  &kp C_BRIGHTNESS_DEC  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans                  &trans             &trans                &trans  &trans  &trans
            >;
        };
    };
};
